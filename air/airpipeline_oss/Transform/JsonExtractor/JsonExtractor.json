{
    "imports": [
        "github.com/project-flogo/flow",
		"github.com/TIBCOSoftware/labs-air-contrib/activity/error",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/string",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/log",
        "github.com/TIBCOSoftware/labs-lightcrane-contrib/activity/jsondeserializer",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/dataembedder",
        "github.com/TIBCOSoftware/labs-air-contrib/function/air"
    ],
    "name": "X_Transform_JsonExtractor",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.9.0",
    "triggers": [],
    "resources": [
        {
            "id": "flow:Transform",
            "data": {
                "name": "Transform",
                "description": "3|5",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "ParseValue",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "ParseValue",
                        "to": "DataEmbedder",
                        "type": "expression",
                        "label": "ParseValuetoDataEmbedder",
                        "value": "air.haskey($activity[ParseValue].Data, $property[\"Enrichment.DataField\"])"
                    },
                    {
                        "id": 3,
                        "from": "DataEmbedder",
                        "to": "NextFlow3",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "NextFlow3",
                        "to": "Return01",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "ParseValue",
                        "to": "NextFlow5",
                        "type": "exprOtherwise",
                        "label": "ParseValuetoReturn02"
                    },
                    {
                        "id": 6,
                        "from": "NextFlow5",
                        "to": "Return02",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"${{ID}}$Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "=string.concat(\"########## Transform ########## : gateway = \", $flow.gateway, \", reading = \", coerce.toString($flow.reading), \", enriched = \", coerce.toString($flow.enriched))"
                            }
                        }
                    },
                    {
                        "id": "ParseValue",
                        "name": "ParseValue",
                        "description": "JSON Deserializer Activity",
                        "activity": {
                            "ref": "#jsondeserializer",
                            "settings": {
                                "schemaFromfile": false,
                                "sample": "",
                                "dataSample": {
                                    "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                                    "value": "",
                                    "fe_metadata": "{}"
                                },
                                "defaultValue": ""
                            },
                            "input": {
                                "JSONString": "=$flow.reading.value"
                            },
                            "schemas": {
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                                        "fe_metadata": "{}"
                                    }
                                },
                                "settings": {
                                    "dataSample": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                                        "fe_metadata": "{}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DataEmbedder",
                        "name": "DataEmbedder",
                        "description": "This activity embed datas to array",
                        "activity": {
                            "ref": "#dataembedder",
                            "settings": {
                                "Targets": "[{\"Name\":\"TargetData\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Consumer": "",
                                "Producer": "",
                                "TargetData": {
                                    "mapping": {
                                        "TargetData": "=air.getsubobject($activity[ParseValue].Data, $property[\"Enrichment.DataField\"])"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "TargetData": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"TargetData\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"TargetData\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "Targets": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"TargetData\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return01",
                        "name": "Return01",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "Return02",
                        "name": "Return02",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {},
				 "errorHandler": {}
            }
        }
    ],
    "properties": [
        {
            "name": "${{ID}}$Logging.LogLevel",
            "type": "string",
            "value": "DEBUG"
        },
        {
            "name": "${{ID}}$Enrichment.DataField",
            "type": "string",
            "value": "DataField not set yet!"
        },
        {
            "name": "${{ID}}$Enrichment.EnrichedField",
            "type": "string",
            "value": "EnrichedField not set yet!"
        }
    ],
    "connections": {},
    "contrib": []
}